name: Image Release RPI

on:
  push:
    branches: [ upload ]


#  schedule:
#    - cron: '0 2 * * *' # run at 2 AM UTC

jobs:
  build:
    runs-on: ubuntu-22.04
    
    strategy:
      fail-fast: false # Don't fail all if any of the jobs is failing
      matrix:
        TESTING: [release]
        TARGET: [pi-bullseye] # <-- Add targets here!

    steps:
    - name: Setup env
      run: |

        echo "DT=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_ENV
        echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
    
    
    ### ONLY THIS RELEVANT FOR BUILDING ###
    - uses: actions/checkout@v3
    - name: update
      run: sudo apt-get update
    - name: upgrade
      run: touch test.img
   
    - name: Pack image for ${{ matrix.TARGET }} ${{ matrix.TESTING }}
      uses: 'actions/upload-artifact@v2'
      with:
        name: "${{ env.artifact_name }}"
        path: |
          *.img
          if-no-files-found: error

  upload:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: "${{ env.artifact_name }}"
    
    - name: compress
      run: |
        ls -a
        cd OpenHD*
        sha256sum * | cut -f 1 -d " " > ../sha256
        echo 'NAME<<EOF' >> $GITHUB_ENV
        ls -1 | sed -e 's/.img/.img.xz/g' >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
        echo 'SIZEFULL<<EOF' >> $GITHUB_ENV
        wc -c *.img | cut -f 1 -d " " >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
        touch image.xz 
        ls -a
        mv * ../
        ls -a
    - name: debug
      run: |
        echo "${{ env.NAME }}"    
        
    - name: Upload file via SSH
      uses: nicklasfrahm/scp-action@main
      with:
        direction: upload
        host: ${{ secrets.LINK }}
        port: ${{ secrets.PORT }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY }}
        insecure_password: ${{ secrets.PASSWORD }}
        insecure_ignore_fingerprint: true
        source: OpenHD-OS-Images/${{ env.NAME }}
        target: OpenHD-OS-Images/${{ env.NAME }}

    - name: Download yaml file via SSH
      uses: nicklasfrahm/scp-action@main
      with:
        direction: download
        host: ${{ secrets.LINK }}
        port: ${{ secrets.PORT }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY }}
        insecure_password: ${{ secrets.PASSWORD }}
        insecure_ignore_fingerprint: true
        source: OpenHD-OS-Images/os_list_imagingutility_v3_template.json
        target: OpenHD-OS-Images/os_list_imagingutility_v3_rpi.json

    - name: update YAMLFILE for the ImageWriter
      run: |
        ls -a      
        export NAME=$(cat last.release)
        export FILESIZE=${{ env.SIZEFULL }}
        export FILENAME=${{ env.NAME }}
        export DOWNLOADSIZE=$(wc -c *.xz | cut -f 1 -d " ")
        export SUM=$(cat sha256)
        export RELEASEDATE=$(date +%Y-%m-%d)

        sed -i "s/RELEASENAMErpi/$NAME/ig" os_list_imagingutility_v3_rpi.json
        sed -i "s/FILENAMErpi/$FILENAME/ig" os_list_imagingutility_v3_rpi.json       
        sed -i "s/FILESIZErpi/$FILESIZE/ig" os_list_imagingutility_v3_rpi.json       
        sed -i "s/SHASUMrpi/$SUM/ig" os_list_imagingutility_v3_rpi.json       
        sed -i "s/DOWNLOADSIZErpi/$DOWNLOADSIZE/ig" os_list_imagingutility_v3_rpi.json        
        sed -i "s/RELEASEDATErpi/$RELEASEDATE/ig" os_list_imagingutility_v3_rpi.json            

    - name: Upload YAMLFILE
      uses: nicklasfrahm/scp-action@main
      with:
        direction: upload
        host: ${{ secrets.LINK }}
        port: ${{ secrets.PORT }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY }}
        insecure_password: ${{ secrets.PASSWORD }}
        insecure_ignore_fingerprint: true
        action_timeout: 30m
        source: OpenHD-OS-Images/os_list_imagingutility_v3_rpi.json
        target: OpenHD-OS-Images/os_list_imagingutility_v3_rpi.json